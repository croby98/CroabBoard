version: '3.8'

# Docker Compose Configuration with Nginx Reverse Proxy
# For deployment with reverse proxy (works with IP or domain)
# Access via: http://your-ip or http://your-domain

services:
  # MySQL Database
  croabboard-db:
    image: mysql:8.0
    container_name: croabboard-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-croabboard_root_2024}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-croabboard}
      MYSQL_USER: ${MYSQL_USER:-croabboard_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-croabboard_pass_2024}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - croabboard_db_data:/var/lib/mysql
      - ../database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - croabboard-network
    command: [
      'mysqld',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-authentication-plugin=mysql_native_password',
      '--max_connections=200',
      '--innodb_buffer_pool_size=256M'
    ]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-croabboard_root_2024}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API Server
  croabboard-backend:
    build:
      context: ../Backend
      dockerfile: Dockerfile
    container_name: croabboard-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MYSQL_HOST: croabboard-db
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER:-croabboard_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-croabboard_pass_2024}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-croabboard}
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secure-session-secret-change-this-in-production}
      # Proxy will handle external access
      FRONTEND_URL: http://localhost
      MAX_FILE_SIZE: 10485760
      UPLOAD_PATH: ./uploads
      BCRYPT_ROUNDS: 12
    volumes:
      - croabboard_uploads:/app/uploads
      - croabboard_logs:/app/logs
    networks:
      - croabboard-network
    depends_on:
      croabboard-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Frontend Web Server
  croabboard-frontend:
    build:
      context: ../Frontend
      dockerfile: Dockerfile
    container_name: croabboard-web
    restart: unless-stopped
    networks:
      - croabboard-network
    depends_on:
      croabboard-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Redis for Session Storage (Optional)
  croabboard-redis:
    image: redis:7-alpine
    container_name: croabboard-cache
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-croabboard_redis_2024}
    volumes:
      - croabboard_redis_data:/data
    networks:
      - croabboard-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Reverse Proxy
  croabboard-proxy:
    image: nginx:alpine
    container_name: croabboard-reverse-proxy
    restart: unless-stopped
    ports:
      - "${PROXY_PORT:-80}:80"
      # Uncomment for HTTPS
      # - "${PROXY_SSL_PORT:-443}:443"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Uncomment for SSL certificates
      # - ../ssl:/etc/nginx/ssl:ro
      - croabboard_nginx_logs:/var/log/nginx
    networks:
      - croabboard-network
    depends_on:
      - croabboard-frontend
      - croabboard-backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

networks:
  croabboard-network:
    driver: bridge
    name: croabboard-network

volumes:
  croabboard_db_data:
    name: croabboard_database_data
  croabboard_uploads:
    name: croabboard_file_uploads
  croabboard_logs:
    name: croabboard_application_logs
  croabboard_redis_data:
    name: croabboard_redis_data
  croabboard_nginx_logs:
    name: croabboard_nginx_logs
