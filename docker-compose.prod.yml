version: '3.8'

# Production Docker Compose Configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  croabboard-db:
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: [
      'mysqld',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-authentication-plugin=mysql_native_password',
      '--max_connections=500',
      '--innodb_buffer_pool_size=1G',
      '--innodb_log_file_size=256M',
      '--query_cache_size=32M',
      '--tmp_table_size=64M',
      '--max_heap_table_size=64M',
      '--slow_query_log=1',
      '--slow_query_log_file=/var/log/mysql/slow.log',
      '--long_query_time=2'
    ]
    ports: []  # Remove external port exposure for security
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  croabboard-backend:
    environment:
      NODE_ENV: production
      SESSION_SECRET: ${SESSION_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-https://croabboard.example.com}
      MYSQL_HOST: croabboard-db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      BCRYPT_ROUNDS: 14
      MAX_FILE_SIZE: 52428800  # 50MB for production
      # Redis session store (if using Redis)
      REDIS_HOST: croabboard-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # Security settings
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_WINDOW: 900000  # 15 minutes
      CORS_ORIGIN: ${FRONTEND_URL:-https://croabboard.example.com}
    ports: []  # Remove external port exposure
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  croabboard-frontend:
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  croabboard-redis:
    command: [
      'redis-server',
      '--appendonly', 'yes',
      '--requirepass', '${REDIS_PASSWORD}',
      '--maxmemory', '256mb',
      '--maxmemory-policy', 'allkeys-lru',
      '--save', '900', '1',
      '--save', '300', '10',
      '--save', '60', '10000'
    ]
    ports: []  # Remove external port exposure
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Reverse Proxy for Production
  croabboard-proxy:
    image: nginx:alpine
    container_name: croabboard-reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - croabboard_nginx_logs:/var/log/nginx
    networks:
      - croabboard-network
    depends_on:
      - croabboard-frontend
      - croabboard-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Monitoring with Prometheus (Optional)
  croabboard-monitoring:
    image: prom/prometheus:latest
    container_name: croabboard-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - croabboard_prometheus_data:/prometheus
    networks:
      - croabboard-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

volumes:
  croabboard_nginx_logs:
    name: croabboard_nginx_logs
  croabboard_prometheus_data:
    name: croabboard_prometheus_data